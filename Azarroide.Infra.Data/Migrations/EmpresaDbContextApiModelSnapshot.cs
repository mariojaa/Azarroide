// <auto-generated />
using Azarroide.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace Azarroide.Infra.Data.Migrations
{
    [DbContext(typeof(EmpresaDbContextApi))]
    partial class EmpresaDbContextApiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Azarroide.Domain.Entities.CadastroDeProdutosEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColaboradorCadastroProdutoId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaEntitieApiId")
                        .HasColumnType("int");

                    b.Property<string>("NomeProdutoCadastrar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusDoCadastroDeProduto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorCadastroProdutoId");

                    b.HasIndex("EmpresaEntitieApiId");

                    b.ToTable("CadastroDeProdutos");
                });

            modelBuilder.Entity("Azarroide.Domain.Entities.ColaboradorEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailColaborador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatriculaColaborador")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompletoColaborador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEUltimoNomeColaborador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilColaborador")
                        .HasColumnType("int");

                    b.Property<int>("RamalColaborador")
                        .HasColumnType("int");

                    b.Property<int>("SetorColaborador")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ColaboradorEntitie");
                });

            modelBuilder.Entity("Azarroide.Domain.Entities.EmpresaEntitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("abertura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaEntitie");
                });

            modelBuilder.Entity("Azarroide.Domain.Entities.CadastroDeProdutosEntitie", b =>
                {
                    b.HasOne("Azarroide.Domain.Entities.ColaboradorEntitie", "ColaboradorCadastroProduto")
                        .WithMany()
                        .HasForeignKey("ColaboradorCadastroProdutoId");

                    b.HasOne("Azarroide.Domain.Entities.EmpresaEntitie", "EmpresaEntitieApi")
                        .WithMany()
                        .HasForeignKey("EmpresaEntitieApiId");

                    b.Navigation("ColaboradorCadastroProduto");

                    b.Navigation("EmpresaEntitieApi");
                });
#pragma warning restore 612, 618
        }
    }
}
